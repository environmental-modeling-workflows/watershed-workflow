# This is a basic workflow to help you get started with Actions

name: CI to Docker Hub

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, geopandas_xarray ]
  pull_request:
    branches: [ master, geopandas_xarray ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    strategy:
      fail-fast: false 
      matrix: 
        os: [ ubuntu-latest, ubuntu-24.04-arm ]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract branch name
        id: extract_branch
        run: echo "BRANCH_NAME=$GITHUB_REF_NAME" >> $GITHUB_ENV

      - name: Extract docker tag name
        id: extract_tag
        run: echo "BRANCH_TAG=$(echo ${GITHUB_REF_NAME} | sed 's/[^[:alnum:]\.\_\-]/-/g')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Get runner architecture
        run: |
          if [[ ${{matrix.os}} == "ubuntu-24.04-arm" ]]; then
            echo "ARCH=arm64" >> $GITHUB_ENV
          else
            echo "ARCH=amd64" >> $GITHUB_ENV
          fi

      - name: Check to see if CI_ENV_DOCKER_TAG exists for current branch
        run: |
          # check to see if manifest for requested image exists, echo $? returns 0 if it exists 
          docker manifest inspect ${{secrets.DOCKER_HUB_USERNAME}}/watershed_workflow-ci_env:${{ env.BRANCH_TAG }}-latest > /dev/null 2>&1 ;
          # returns 0 if image exists, 1 if it is missing (so default to master if 1)
          if [ $? -eq 1 ]; then
            echo "CI_ENV_BRANCH=master" >> $GITHUB_ENV
          else
            echo "CI_ENV_BRANCH=${{env.BRANCH_TAG}}-latest" >> $GITHUB_ENV
          fi 

      - name: check environment variable
        run: |
          # verify that logic above has worked
          echo ${{env.CI_ENV_BRANCH}}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./docker/CI.Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/watershed_workflow-ci:${{ env.BRANCH_TAG }}-${{ env.ARCH }}
          build-args: CI_ENV_DOCKER_TAG=${{env.CI_ENV_BRANCH}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  
  fix-manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out repo
        uses: actions/checkout@v4     
      - name: Extract branch name
        id: extract_branch
        run: echo "BRANCH_NAME=$GITHUB_REF_NAME" >> $GITHUB_ENV
      - name: Extract docker tag name
        id: extract_tag
        run: echo "BRANCH_TAG=$(echo ${GITHUB_REF_NAME} | sed 's/[^[:alnum:]\.\_\-]/-/g')" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
      - name: Pull images (remove with artifacts??)
        run: |
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/watershed_workflow-ci:${{ env.BRANCH_TAG }}-arm64
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/watershed_workflow-ci:${{ env.BRANCH_TAG }}-amd64
      - name: Edit manifest
        run: |
          docker manifest create ${{ secrets.DOCKER_HUB_USERNAME }}/watershed_workflow-ci:${{ env.BRANCH_TAG }}-latest \
            --amend ${{ secrets.DOCKER_HUB_USERNAME }}/watershed_workflow-ci:${{ env.BRANCH_TAG }}-arm64-latest \
            --amend ${{ secrets.DOCKER_HUB_USERNAME }}/watershed_workflow-ci:${{ env.BRANCH_TAG }}-amd64-latest
          docker manifest push ${{ secrets.DOCKER_HUB_USERNAME }}/watershed_workflow-ci:${{ env.BRANCH_TAG }}-latest

